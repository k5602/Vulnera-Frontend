---
import Layout from "../layouts/Layout.astro";
import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";
---

<Layout title="Login — Vulnera" description="Access your Vulnera account">
  <!-- Guest Guard - Redirect to dashboard if already authenticated -->
  <script is:inline>
    (function() {
      const token = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');
      if (token) {
        window.location.href = '/dashboard';
      }
    })();
  </script>

  <Navigation />

  <section id="main" class="relative min-h-screen flex items-center justify-center overflow-hidden bg-black">
    <!-- Background -->
    <div class="absolute inset-0 z-0">
      <div class="absolute inset-0 matrix-rain opacity-20"></div>
      <div class="absolute inset-0 bg-gradient-to-r from-black via-black/80 to-black/60"></div>
      <div class="absolute inset-0 bg-gradient-to-b from-transparent via-matrix-900/20 to-black/80"></div>
    </div>

    <!-- Login Form -->
    <div class="relative z-10 w-full max-w-md px-4">
      <div class="mb-6 text-center">
        <h1 class="text-3xl md:text-4xl font-bold text-white font-mono tracking-wider">
          <span class="text-cyber-400">&gt;</span> LOGIN
        </h1>
        <p class="text-matrix-300 mt-2">Authenticate to access dashboard</p>
      </div>

      <!-- Login Card -->
      <div class="terminal-border bg-black/80 rounded-xl p-6 shadow-xl">
        <!-- Terminal Header -->
        <div class="flex items-center space-x-2 mb-4">
          <span class="w-3 h-3 rounded-full bg-red-500"></span>
          <span class="w-3 h-3 rounded-full bg-yellow-500"></span>
          <span class="w-3 h-3 rounded-full bg-green-500"></span>
          <span class="ml-3 text-xs text-gray-400">vulnera@auth:~</span>
        </div>

        <!-- Error Message -->
        <div id="error-message" class="hidden mb-4 p-3 bg-red-900/20 border border-red-500/50 rounded text-red-300 text-sm"></div>

        <!-- Success Message -->
        <div id="success-message" class="hidden mb-4 p-3 bg-green-900/20 border border-green-500/50 rounded text-green-300 text-sm"></div>

        <!-- Form -->
        <form id="login-form" class="space-y-4">
          <div>
            <label for="email" class="block text-sm text-cyber-300 mb-1">EMAIL</label>
            <input 
              id="email" 
              type="email"
              class="w-full px-4 py-3 rounded-lg bg-black/60 border border-cyber-400/30 focus:border-cyber-400 focus:ring-2 focus:ring-cyber-400 text-white placeholder-gray-500"
              placeholder="user@example.com" 
              required 
              autocomplete="email"
            />
          </div>

          <div>
            <label for="password" class="block text-sm text-cyber-300 mb-1">PASSWORD</label>
            <input 
              id="password" 
              type="password"
              class="w-full px-4 py-3 rounded-lg bg-black/60 border border-cyber-400/30 focus:border-cyber-400 focus:ring-2 focus:ring-cyber-400 text-white placeholder-gray-500"
              placeholder="••••••••" 
              required 
              minlength="6"
              autocomplete="current-password"
            />
          </div>

          <div class="flex items-center">
            <input id="remember" type="checkbox" class="accent-cyber-400" />
            <label for="remember" class="ml-2 text-sm text-matrix-300">Remember me</label>
          </div>

          <button 
            type="submit" 
            id="submit-btn"
            class="w-full bg-gradient-to-r from-cyber-600 to-matrix-600 hover:from-cyber-500 hover:to-matrix-500 text-black px-6 py-3 rounded-lg font-bold font-mono transition-all disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span class="mr-2">&gt;</span> LOGIN
          </button>
        </form>

        <div class="text-center mt-6">
          <span class="text-gray-400 text-sm">No account?</span>
          <a href="/signup" class="text-cyan-300 hover:text-cyan-200 ml-2 text-sm">Create one</a>
        </div>
      </div>

      <p class="mt-6 text-center text-xs text-gray-500">Protected by enterprise-grade security.</p>
    </div>
  </section>

  <Footer />

  <script>
    import { authService } from '../utils/api/index';

    const form = document.getElementById('login-form') as HTMLFormElement;
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    const errorDiv = document.getElementById('error-message') as HTMLDivElement;
    const successDiv = document.getElementById('success-message') as HTMLDivElement;

    const showError = (message: string) => {
      errorDiv.textContent = message;
      errorDiv.classList.remove('hidden');
      successDiv.classList.add('hidden');
    };

    const showSuccess = (message: string) => {
      successDiv.textContent = message;
      successDiv.classList.remove('hidden');
      errorDiv.classList.add('hidden');
    };

    const hideMessages = () => {
      errorDiv.classList.add('hidden');
      successDiv.classList.add('hidden');
    };

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      hideMessages();
      
      const emailEl = document.getElementById('email') as HTMLInputElement;
      const passwordEl = document.getElementById('password') as HTMLInputElement;
      const rememberEl = document.getElementById('remember') as HTMLInputElement;

      const email = emailEl.value.trim();
      const password = passwordEl.value;
      const remember = rememberEl.checked;

      // Validate inputs
      if (!email || !password) {
        showError('Email and password are required');
        return;
      }

      // Disable submit button
      submitBtn.disabled = true;
      submitBtn.innerHTML = '<span class="mr-2">&gt;</span> AUTHENTICATING...';

      try {
        // Call the real API
        const response = await authService.login(
          { email, password },
          remember
        );

        if (response.success) {
          showSuccess('Login successful! Redirecting...');
          
          // Redirect after short delay
          setTimeout(() => {
            const params = new URLSearchParams(window.location.search);
            const next = params.get('next') || '/dashboard';
            window.location.href = next;
          }, 500);
        } else {
          showError(response.error || 'Login failed. Please check your credentials.');
          submitBtn.disabled = false;
          submitBtn.innerHTML = '<span class="mr-2">&gt;</span> LOGIN';
        }
      } catch (err: any) {
        showError('Network error: ' + (err?.message || 'Unable to connect to server'));
        submitBtn.disabled = false;
        submitBtn.innerHTML = '<span class="mr-2">&gt;</span> LOGIN';
      }
    });
  </script>
</Layout>
